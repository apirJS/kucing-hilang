version: '3.8'

services:
  postgres:
    image: postgres
    container_name: postgres_container
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5432:5432'
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
  
  redis:
    image: bitnami/redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/bitnami/redis/data

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: nextjs-app
    ports:
      - "3000:3000" # Optional: Only if you need to access it directly for debugging
    environment:
      - CONFIG_FILE=config.env
    depends_on:
      - postgres
      - redis

  backend:
    build:
      context: ./service
      dockerfile: Dockerfile
    container_name: express-app
    ports:
      - "3001:3001" # Optional: Only if you need to access it directly for debugging
    environment:
      - NODE_ENV=production
    env_file: .env

  nginx:
    build:
      context: ./nginx  # Path to the directory containing your Dockerfile
      dockerfile: Dockerfile  # Name of your Dockerfile
    container_name: nginx
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/certbot
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend

  certbot:
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  postgres_data:
  redis_data:
  certbot-etc:
  certbot-var:
